spring:
  application:
    name: Gizmo
  main:
    # needed to override springSecurityFilterChain from Spring Security
    allow-bean-definition-overriding: true
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      file-size-threshold: 256KB
  thymeleaf:
    cache: false
  datasource:
    url: jdbc:postgresql://host.docker.internal:5432/gizmo4
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: password
  security:
    post-logout-redirect-uri: http://localhost:8080/gizmo/
    oauth2:
      client:
        registration:
          dummy:
            client-id: dummy
            client-secret: dummy
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid
        provider:
          dummy:
            authorization-uri: http://localhost:9999/oauth2/authorize
            token-uri: http://localhost:9999/oauth2/token
            user-info-uri: http://localhost:9999/userinfo
            jwk-set-uri: http://localhost:9999/jwks


  jpa:
    database-platform: com.evolveum.gizmo.util.GizmoPostgreSQLDialect
    hibernate:
      naming:
        physical-strategy: com.evolveum.gizmo.util.GizmoNamingStrategy
      ddl-auto: none
#      use-new-id-generator-mappings: true
    show-sql: true
server:
  tomcat:
    max-http-form-post-size: 104857600
  ## Enable and configuration ajp connector for mp
  #    ajp:
  #      enabled: true
  #      port: 9090
  servlet:
    context-path: /gizmo
    application-display-name: Gizmo
    session:
      timeout: 30m  # in minutes. By default spring uses seconds, but tomcat/container (not embedded) uses this value
      # as minutes - so we end up with never expiring session.

